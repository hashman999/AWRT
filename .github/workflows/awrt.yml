name: AWRT

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: h29k.config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    strategy:
      matrix:
        device: [h29k]
    runs-on: ubuntu-22.04

    steps:
    - name: Before freeing up disk space
      run: df -hT

    - name: "Optimize Disk Space - Deep Cleanup"
      uses: "hugoalh/disk-space-optimizer-ghaction@v0.8.1"
      with:
        operate_sudo: "True"
        general_include: ".+"
        general_exclude: |-
          ^GCC$
          ^G\+\+$
          Clang
          LLVM
        docker_include: ".+"
        docker_prune: "True"
        docker_clean: "True"
        apt_prune: "True"
        apt_clean: "True"
        homebrew_prune: "True"
        homebrew_clean: "True"
        npm_prune: "True"
        npm_clean: "True"
        os_swap: "True"

    - name: Optimize Disk Space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 2048
        swap-size-mb: 1
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'

    - name: Free up disk space complete
      run: df -hT

    - name: Checkout Code
      uses: actions/checkout@main

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install --reinstall -y build-essential gcc g++ g++-multilib libdeflate-dev libdeflate0 ninja-build

    - name: Clone Source Code
      run: |
        git clone --filter=blob:none --depth=2 $REPO_URL -b $REPO_BRANCH openwrt

    - name: Execute DIY Part 1 Script
      run: |
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update & Install Feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a || (echo "Retrying feeds update..." && sleep 5 && ./scripts/feeds update -a)
        ./scripts/feeds install -a || (echo "Retrying feeds install..." && sleep 5 && ./scripts/feeds install -a)

    - name: Load Configuration
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
        make defconfig

    - name: Check if Toolchain Needs Rebuilding
      run: |
        if [ ! -d "openwrt/staging_dir/toolchain-*" ] || [ -z "$(ls -A openwrt/staging_dir/toolchain-*/lib/ld-musl-*.so* 2>/dev/null)" ]; then
          echo "TOOLCHAIN_REBUILD=true" >> $GITHUB_ENV
        else
          echo "TOOLCHAIN_REBUILD=false" >> $GITHUB_ENV
        fi

    - name: Rebuild Toolchain if Needed
      if: env.TOOLCHAIN_REBUILD == 'true'
      run: |
        cd openwrt
        echo "Toolchain is missing or incomplete, rebuilding..."
        make toolchain/install -j$(nproc) V=s

    - name: Compile Firmware
      run: |
        cd openwrt
        make -j$(nproc) > build.log 2>&1 || (echo "Build failed, showing last 100 lines of log:" && tail -n 100 build.log && exit 1)

    - name: Upload Build Logs on Failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-log
        path: openwrt/build.log

    - name: Upload firmware to Cowtransfer
      if: steps.compile.outcome == 'success' && env.UPLOAD_COWTRANSFER == 'true'
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress openwrt/bin/targets/*/* 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"

    - name: Upload firmware to WeTransfer
      if: steps.compile.outcome == 'success' && env.UPLOAD_WETRANSFER == 'true'
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress openwrt/bin/targets/*/* 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"

    - name: Upload firmware to GitHub Releases
      if: env.UPLOAD_RELEASE == 'true'
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        files: openwrt/bin/targets/*/*

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        retain_days: 1
        keep_minimum_runs: 3

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
