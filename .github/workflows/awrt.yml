name: Build OpenWrt

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: h29k.config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    strategy:
      matrix:
        device: [h29k, x86_64, raspberrypi4]
    runs-on: ubuntu-22.04

    steps:
    - name: Optimize Disk Space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 2048
        swap-size-mb: 1
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'

    - name: Checkout Code
      uses: actions/checkout@main

    - name: Install Dependencies
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install ccache \
        ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
        bzip2 cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
        git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
        libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool \
        mkisofs nano ninja-build patch pkgconf python3 python3-pyelftools qemu-utils rsync scons squashfs-tools \
        subversion swig texinfo upx-ucl unzip vim wget xmlto xxd zlib1g-dev python3-setuptools
        sudo timedatectl set-timezone "$TZ"

    - name: Set up ccache
      run: |
        ccache --max-size=2G
        ccache --set-config=compression=true
        ccache --set-config=compression_level=6
        export PATH="/usr/lib/ccache:$PATH"
        export CC="ccache gcc"
        export CXX="ccache g++"
        ccache -s  # 显示 ccache 命中率

    - name: Cache OpenWrt dl directory
      uses: actions/cache@v2
      with:
        path: openwrt/dl
        key: ${{ runner.os }}-openwrt-dl-${{ hashFiles('openwrt/feeds.conf.default') }}
        restore-keys: |
          ${{ runner.os }}-openwrt-dl-

    - name: Cache OpenWrt toolchain
      uses: actions/cache@v2
      with:
        path: openwrt/staging_dir/toolchain-*
        key: ${{ runner.os }}-openwrt-toolchain-${{ github.run_id }}
        restore-keys: |
          ${{ runner.os }}-openwrt-toolchain-

    - name: Cache OpenWrt package feeds
      uses: actions/cache@v2
      with:
        path: openwrt/package/feeds
        key: ${{ runner.os }}-openwrt-packages-${{ github.run_id }}
        restore-keys: |
          ${{ runner.os }}-openwrt-packages-

    - name: Clone Source Code
      run: |
        git clone --filter=blob:none --depth=1 $REPO_URL -b $REPO_BRANCH openwrt

    - name: Select Device Config
      run: |
        echo "CONFIG_FILE=${{ matrix.device }}.config" >> $GITHUB_ENV

    - name: Load Custom Feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update & Install Feeds
      run: |
        (cd openwrt && ./scripts/feeds install -a) & \
        (cd openwrt && make download -j$(nproc) V=s) && wait

    - name: Load Configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH
        make defconfig

    - name: Determine Build Type (Full or Incremental)
      run: |
        cd openwrt
        if git diff --name-only HEAD^ | grep -qE "target|kernel"; then
            echo "Kernel/Target changed, performing full compile"
            make -j$(nproc) V=s
        else
            echo "No Kernel/Target changes, performing incremental compile"
            make package/compile -j$(nproc) V=s
        fi

    - name: Show ccache stats
      run: |
        ccache -s
